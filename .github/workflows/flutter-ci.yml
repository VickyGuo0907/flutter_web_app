name: Flutter-CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest

    # Note that this workflow uses the latest stable version of the Dart SDK.
    # Docker images for other release channels - like dev and beta - are also
    # available. See https://hub.docker.com/r/google/dart/ for the available
    # images.
#     container:
#       image:  google/dart:latest

    steps:
      # Setup the flutter environment.
      - uses: actions/checkout@v2
  
      - uses: subosito/flutter-action@v1
        with:
          channel: beta # 'dev', 'alpha', default to: 'stable'
      # Check for any formatting issues in the code.
      #- run: flutter format --set-exit-if-changed .

      # Statically analyze the Dart code for any errors.   
      - run: flutter config --enable-web

      # build the app
      - run: flutter build web

      # Deploy to Netlify with predefined secrets 
      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.1
        with:
          publish-dir: './build/web'
          production-branch: main
          github-token: ${{ secrets.MY_GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: false
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1  

